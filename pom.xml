<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- the base -->
    <groupId>de.yaio</groupId>
    <artifactId>yaio</artifactId>
    <version>0.1.0-beta-feature-YAIO2234-improvements-201512-RELEASE</version>
    <name>yaio</name>
    <description>YourAllInOne D'Artagnan</description>
    <url>http://www.your-all-in-one.de</url>
    <organization>
        <name>Your-All-In-One</name>
        <url>http://www.your-all-in-one.de</url>
    </organization>
    
    <!-- for spring boot -->
    <parent>
        <groupId>de.yaio</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
        <artifactId>yaio-pom-webstarter</artifactId>
        <version>0.1.0</version>
    </parent>

    <!-- settings-->
    <properties>
        <!--
          ##################
          # Packaging/Phase defaults
          ##################
         -->
        <!-- packaging - change it with "mvn package -Dpackaging.type=jar" -->
        <packaging.type>jar</packaging.type>
        <!-- assembly a jar with all dependencies - activate it with "mvn package -Dpackaging.assembly-phase=package" -->
        <packaging.assembly-phase>none</packaging.assembly-phase>
        <!-- shade to an ueber-jar - deactivate it with "mvn package -Dpackaging.shade-phase=none" -->
        <packaging.shade-phase>package</packaging.shade-phase>
        <packaging.springboot-phase>package</packaging.springboot-phase>
        <!-- generate resources - deactivate it with "mvn package -Dfrontend-maven-plugin.phase=none" -->
        <frontend-maven-plugin.phase>generate-resources</frontend-maven-plugin.phase>
        <!-- karma tests - deactivate it with "mvn package -Dmaven-karma-plugin.phase=none" -->
        <maven-karma-plugin.phase>test</maven-karma-plugin.phase>
        <!-- protractor tests - deactivate it with "mvn package -Dmaven.ng.protractor=none" -->
        <maven.ng.protractor.phase>integration-test</maven.ng.protractor.phase>
        <!-- prepare integration tests - deactivate it with "mvn package -Dmaven-antrun-plugin.phase.pre-integration-test=none" -->
        <maven-antrun-plugin.phase.pre-integration-test>pre-integration-test</maven-antrun-plugin.phase.pre-integration-test>
        <!-- post integration tests - deactivate it with "mvn package -Dmaven-antrun-plugin.phase.post-integration-test=none" -->
        <maven-antrun-plugin.phase.post-integration-test>post-integration-test</maven-antrun-plugin.phase.post-integration-test>

        <!--
          ##################
          # project
          ##################
         -->
        <!--  project -->
        <start-class>de.yaio.rest.Application</start-class>

        <!--
          ##################
          # dependency versions
          ##################
         -->
         
        <!-- Yaio versions -->
        <yaio-commons.version>0.2.0</yaio-commons.version>
        <yaio-plantuml-service.version>0.4.0</yaio-plantuml-service.version>
        <yaio-webshot-service.version>0.5.0</yaio-webshot-service.version>
        <yaio-dms-service.version>0.3.0</yaio-dms-service.version>
        <yaio-metaextract-service.version>0.2.0</yaio-metaextract-service.version>

        <!--  versions -->
        <roo.version>1.2.4.RELEASE</roo.version>
        <aspectj.version>1.8.3</aspectj.version>
        
        <!-- managed -->
        <!--
            <spring.version>4.0.7.RELEASE</spring.version>
    
            <slf4j.version>1.7.5</slf4j.version>
            <log4j.version>1.2.17</log4j.version>

            <mysql-connector-java.version>5.1.18</mysql-connector-java.version>
            <hsqldb.version>2.2.9</hsqldb.version>
        -->
        <hibernate-core.version>4.2.2.Final</hibernate-core.version>
        <hibernate-entitymanager.version>4.2.2.Final</hibernate-entitymanager.version>
        <hibernate-validator.version>4.3.1.Final</hibernate-validator.version>
        <hibernate-jpa-2.0-api.version>1.0.1.Final</hibernate-jpa-2.0-api.version>
        <jta.version>1.1</jta.version>

        <servlet-api.version>2.5</servlet-api.version>
        <flexjson.version>2.1</flexjson.version>
        <validation-api.version>1.0.0.GA</validation-api.version>

        <commons-pool.version>1.5.6</commons-pool.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <commons-cli.version>1.2</commons-cli.version>
        <commons-io.version>2.1</commons-io.version>
        <commons-compress>1.10</commons-compress>

        <poi.version>3.12</poi.version> <!-- POI 3.13 breaks Excel-Exporter so we should use tika 1.9 with 3.12 -->
        <icu4j.version>54.1</icu4j.version>
        <markdown4j>2.2-cj-1.0</markdown4j>
        <swagger.version>2.1.2</swagger.version>
        <biweekly.version>0.4.2</biweekly.version>

        <!-- test-scope -->
        <json-path.version>0.8.1</json-path.version>
        <junit.version>4.11</junit.version>
        <!-- deactivated
            <selenium-java.version>2.41.0</selenium-java.version>
            <selenium-firefox-driver.version>2.41.0</selenium-firefox-driver.version>
        -->

        <!-- Plugin versions -->
        <frontend-maven-plugin.version>0.0.23</frontend-maven-plugin.version>
        <maven.surefire.plugin.version>2.14</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version>
        <maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version>
        <maven.javadoc.plugin.version>2.9.1</maven.javadoc.plugin.version>
        <maven.checkstyle.plugin.version>2.12.1</maven.checkstyle.plugin.version>
        <maven.findbugs.plugin.version>2.5.5</maven.findbugs.plugin.version>
        <maven.pmd.plugin.version>3.1</maven.pmd.plugin.version>
        <maven.antrun.plugin.version>1.6</maven.antrun.plugin.version>
        <maven.ng.protractor.version>0.0.2</maven.ng.protractor.version>
        <node.version>v0.10.35</node.version>
        <npm.version>1.3.15</npm.version>
    </properties>

        
    <!-- packaging jar or war and version -->
    <packaging>${packaging.type}</packaging>

    <!-- use these repositories to solve dependencies and get jars -->
    <repositories>
        <repository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </repository>
        <repository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </repository>
        <repository>
            <id>spring-roo-repository</id>
            <name>Spring Roo Repository</name>
            <url>http://spring-roo-repository.springsource.org/release</url>
        </repository>
        <!-- spring boot -->
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>http://repo.spring.io/libs-release</url>
        </repository>

        <!-- github repos -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-roo-repository</id>
            <name>Spring Roo Repository</name>
            <url>http://spring-roo-repository.springsource.org/release</url>
        </pluginRepository>
        <!-- spring boot -->
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>http://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- dependencies to compile and run the application -->
    <dependencies>
        <!-- General dependencies for standard applications -->
        
        <!-- aspect-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.flexjson</groupId>
            <artifactId>flexjson</artifactId>
            <version>${flexjson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress}</version>
        </dependency>
        <!-- ROO dependencies -->
        <dependency>
            <groupId>org.springframework.roo</groupId>
            <artifactId>org.springframework.roo.annotations</artifactId>
            <version>${roo.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-entitymanager.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${hibernate-jpa-2.0-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>${jta.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <!-- ${spring.version} not avaliable siehe http://www.springframework.org/schema/tx/ -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons-pool.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--  tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>${json-path.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>${frontend-maven-plugin.version}</version>
        </dependency>
 
        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency> 
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>${swagger.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- YAIO -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
<!--
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
-->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
        </dependency>
        <!-- chardetector for encoding -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>${icu4j.version}</version>
        </dependency>
        <!-- markdown -->
        <dependency>
            <groupId>org.commonjava.googlecode.markdown4j</groupId>
            <artifactId>markdown4j</artifactId>
            <version>${markdown4j}</version>
        </dependency>
        <!-- admin -->
        <dependency>
           <groupId>net.sf.biweekly</groupId>
           <artifactId>biweekly</artifactId>
           <version>${biweekly.version}</version>
        </dependency>

        <!-- yaio-services / via jitpack.io because of no maven-centra-account -->
        <dependency>
            <groupId>de.yaio</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
            <artifactId>yaio-commons</artifactId>
            <version>${yaio-commons.version}</version>
        </dependency>
        <dependency>
            <groupId>de.yaio.services</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
            <artifactId>yaio-plantuml-service</artifactId>
            <version>${yaio-plantuml-service.version}</version>
        </dependency>
        <dependency>
            <groupId>de.yaio.services</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
            <artifactId>yaio-webshot-service</artifactId>
            <version>${yaio-webshot-service.version}</version>
        </dependency>
        <dependency>
            <groupId>de.yaio.services</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
            <artifactId>yaio-dms-service</artifactId>
            <version>${yaio-dms-service.version}</version>
        </dependency>
        <dependency>
            <groupId>de.yaio.services</groupId>
            <!-- 
            <groupId>com.github.das-praktische-schreinerlein</groupId>
             -->
            <artifactId>yaio-metaextract-service</artifactId>
            <version>${yaio-metaextract-service.version}</version>
        </dependency>

    </dependencies>

    <!-- build options -->
    <build>
        <!-- set finalname for jar + context as war -->
        <finalName>yaio</finalName>
        <!-- for actuator-infos -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/generated-resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>

            <!-- grunt-integration to prepare ressources -->
            <plugin>
               <groupId>com.github.eirslett</groupId>
               <artifactId>frontend-maven-plugin</artifactId>
               <version>${frontend-maven-plugin.version}</version>
               
               <executions>
                   <execution>
                       <id>install node and npm</id>
                       <phase>${frontend-maven-plugin.phase}</phase>
                       <goals>
                           <goal>install-node-and-npm</goal>
                       </goals>
                       <configuration>
                           <nodeVersion>${node.version}</nodeVersion>
                           <npmVersion>${npm.version}</npmVersion>
                       </configuration>
                   </execution>
                   <execution>
                       <id>npm install</id>
                       <phase>${frontend-maven-plugin.phase}</phase>
                       <goals>
                           <goal>npm</goal>
                       </goals>
                       <configuration>
                           <arguments>install</arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>grunt build</id>
                       <phase>${frontend-maven-plugin.phase}</phase>
                       <goals>
                           <goal>grunt</goal>
                       </goals>
                       <configuration>
                           <arguments>dist</arguments>
                       </configuration>
                   </execution>
               </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <!-- <configuration> <webXml>target/web.xml</webXml> </configuration> -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <!-- NB: do not use 1.3 or 1.3.x due to MASPECTJ-90 issue  -->
                <dependencies>
                    <!-- NB: You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outxml>true</outxml>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--
                      Aspects in src/main/java and src/main/aspects are added as default in the 
                      compile goal.
                      Aspects in src/test/java and src/test/aspects are added as default in the 
                      test-compile goal.
                      Aspects in src/main/java are added in the test-compile goal 
                      if weaveWithAspectsInMainSourceFolder is set to true
                    -->
                    <weaveWithAspectsInMainSourceFolder>false</weaveWithAspectsInMainSourceFolder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            
            <!--  tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <printSummary>true</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <excludes>
                        <exclude>**/*_Roo_*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.surefire.report.plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-test-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-integration-test-report</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>failsafe-report-only</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <!-- IDE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.7</version>
                <!-- Note 2.8 does not work with AspectJ aspect path -->
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                    <wtpversion>2.0</wtpversion>
                    <additionalBuildcommands>
                        <buildCommand>
                            <name>org.eclipse.ajdt.core.ajbuilder</name>
                            <arguments>
                                <aspectPath>org.springframework.aspects</aspectPath>
                            </arguments>
                        </buildCommand>
                        <buildCommand>
                            <name>org.springframework.ide.eclipse.core.springbuilder</name>
                        </buildCommand>
                    </additionalBuildcommands>
                    <additionalProjectnatures>
                        <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
                        <projectnature>com.springsource.sts.roo.core.nature</projectnature>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.4.v20120524</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/${project.name}</contextPath>
                    </webAppConfig>
                </configuration>
            </plugin>

            <!-- checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>/checkstyle.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>info</violationSeverity>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.findbugs.plugin.version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.kelveden</groupId>
                <artifactId>maven-karma-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <phase>${maven-karma-plugin.phase}</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- <karmaExecutable>${basedir}\node_modules\karma\bin\karma</karmaExecutable> -->
                    <karmaExecutable>karma.cmd</karmaExecutable>
                    <configFile>karma.yaio.conf.js</configFile>
                    <!-- <junitReportFile>src/main/webapp/resources/test-results.xml</junitReportFile> -->
                    <reportsDirectory>${project.build.directory}/karma-reports</reportsDirectory>
                    <!-- <browsers>PhantomJS,IE</browsers> -->
                    <autoWatch>false</autoWatch>
                    <singleRun>true</singleRun>
                    <colors>true</colors>
                    <skipKarma>false</skipKarma>
                    <skipTests>false</skipTests>
                    <karmaFailureIgnore>false</karmaFailureIgnore>
                    <!-- <reporters>story</reporters> -->
                </configuration>
            </plugin>
            
            <!--  integration-tests -->
            <plugin>
                <groupId>com.github.greengerong</groupId>
                <artifactId>maven-ng-protractor</artifactId>
                <version>${maven.ng.protractor.version}</version>
                <configuration>
                    <protractor>${basedir}/node_modules/.bin/protractor</protractor>
                    <configFile>${project.basedir}/protractor.yaio.conf.js</configFile>
                </configuration>
                <executions>
                    <execution>
                        <id>ng-protractor</id>
                        <phase>${maven.ng.protractor.phase}</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven.antrun.plugin.version}</version>
                <executions>
                    <execution>
                        <id>start-third-parties</id>
                        <phase>${maven-antrun-plugin.phase.pre-integration-test}</phase>
                        <configuration>
                            <target>
                                <!-- clean all instances -->
                                <exec executable="cmd.exe"><arg value="/C" /><arg value="${basedir}/sbin/stop-yaioapp.bat" /></exec>
                                <!-- start instance -->
                                <exec executable="cmd.exe"><arg value="/C" /><arg value="${basedir}/sbin/start-yaioapp-test.bat" /></exec>
                                <!-- wait till instance is up -->
                                <sleep seconds="60" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-third-parties</id>
                        <phase>${maven-antrun-plugin.phase.post-integration-test}</phase>
                        <configuration>
                            <target>
                                <!-- clean all instances -->
                                <exec executable="cmd.exe"><arg value="/C" /><arg value="${basedir}/sbin/stop-yaioapp.bat" /></exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                   </execution>
                </executions>
            </plugin>
          </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.surefire.report.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.findbugs.plugin.version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin.version}</version>
                <configuration>
                    <targetJdk>${java.version}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>gr.abiss.mvn.plugins</groupId>
                <artifactId>maven-jstools-plugin</artifactId>
                <version>0.7</version>
                <configuration>
                    <jsDir>src/main/web</jsDir>
                    <includePrivate>true</includePrivate>
                    <includeUndocumented>true</includeUndocumented>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>jslint</report>
                            <report>jsdoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
           <plugin>
               <groupId>com.phasebash.jsdoc</groupId>
               <artifactId>jsdoc3-maven-plugin</artifactId>
               <version>1.1.0</version>
               <configuration>
                   <recursive>true</recursive>
                   <directoryRoots>
                       <directoryRoot>${basedir}/yaio-playground/src/main/web/yaio-explorerapp/js</directoryRoot>
                       <directoryRoot>${basedir}/yaio-playground/src/test/javascript</directoryRoot>
                   </directoryRoots>
               </configuration>
            </plugin>
         </plugins>
    </reporting>
</project>
