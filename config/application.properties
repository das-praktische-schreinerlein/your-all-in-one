###########################
## Spring
###########################
# path to applicationContext.xml
# prod 
config.spring.applicationconfig.path=./config/applicationContext.xml
# default from META-INF: config.spring.applicationconfig.path=/META-INF/spring/defaultApplicationContext.xml

#logging.level.=DEBUG

##########################
## Tomcat
##########################
# The listen port for incoming HTTP requests.
server.port=8083
# The interface address to bind to.
server.address=localhost
# the sessiontimeout in seconds
server.sessionTimeout=3600

# set max filesize
yaio.server.maxfilesize=20mb
yaio.server.maxrequestsize=256mb

##########################
## Management
##########################
# management
# management.port=8080
management.context-path=/manage
management.security.role=SUPERUSER
# endpoints
#endpoints.enabled=false
#endpoints.info.enabled=true
#endpoints.health.enabled=true
#endpoints.mappings.enabled=true

# appinfo
project.artifactId=yaio
project.name=YouAllInOne
project.version=1.0
project.description=YouAllInOne D'Artagnan
info.build.artifact=${project.artifactId}
info.build.name=${project.name}
info.build.description=${project.description}
info.build.version=${project.version}

springfox.documentation.swagger.v2.path=/swaggerv2

##########################
## Security
##########################
yaio.security.apiusers.filelocation=./config/security-apiusers.properties

##########################
## UPNPN
##########################
# start the upnp-apppropagator (yes/no)
propagator.upnp.start=yes

# userfirendly devicename for publish on the network
propagator.upnp.device.friendlyname=YAIO-Playground
# devicetype: default Basic
propagator.upnp.device.type=Basic
# devicetypeversion: default 1
propagator.upnp.device.typeversion=1

### static starturl per interface-adr 
# set this if you want publish a static url, otherwise for every interface-addr an own starturl will generated 
#propagator.upnp.device.starturl.static=http://yaio-playground.local/index.html

### generation of dynamic starturl per interface-addr (only if yaio.upnp.device.starturl.static not set)
# protocol for generation of dynamic starturl per interface-addr (http, https) 
propagator.upnp.device.starturl.protocol=http
# port for generation of dynamic starturl per interface-addr (should be same as server.port: 8666) 
propagator.upnp.device.starturl.port=8666
# uri for generation of dynamic starturl per interface-addr (upnp.html)
propagator.upnp.device.starturl.uri=install.html

# data of the device-manufacturer 
propagator.upnp.manufacturer.name=YITF
propagator.upnp.manufacturer.url=http://www.your-it-fellow.de
# data of the device-model 
propagator.upnp.model.name=YAIOAppliance
propagator.upnp.model.desc=D'Artagnan YourAllInOne - Dein persönlicher Software-Musketier 'Einer für Alles - Alles in Einem' -  Kalender, Organizer, Notizzettel, Checkliste, Projektplanung, Projektdokumentation, Wiki, HowTo, Adressbuch, Dokumentenmanagement...
propagator.upnp.model.version=v1
propagator.upnp.model.url=http://www.your-all-in-one.de
# data of the icon 
propagator.upnp.icon.type=image/png
propagator.upnp.icon.url=classpath:/static/images/icon-upnp.png
# defaults 32,32,8
propagator.upnp.icon.width=32
propagator.upnp.icon.height=32
propagator.upnp.icon.depth=8

##########################
## yaio
##########################
# location of the external examples-dir to configure tomcat to map /examples/ to this loaction
yaio.exportcontroller.examples.location=file:///D:/Projekte/yaio-playground/resources/examples/
# location of the replacerdefinitions
yaio.exportcontroller.replacerdef.location=./config/exportcontroller-replacerdef.properties
# configure this to set a baseurl for all html-exports
yaio.exportcontroller.replace.baseref=http://yaio-playground.local/
# configure this to set a baseurl for html-exports with outputoption FlgUsePublicBaseRef
yaio.exportcontroller.replace.publicbaseref=http://demo.your-all-in-one.de/

# configure this to set a baseurl for public plantuml-converter
yaio.plantUmlBaseUrl=/converters/
# configure this to set a baseurl for public plantuml-converter
yaio.exportcontroller.plantUmlBaseUrl=http://www.plantuml.com/

# hide system-nodes from export
yaio.exportcontroller.excludenodepraefix=Sys% %Templ MyStart MyHelp JsUnitTest JsFuncTest JUnitTest

# my yaio-domain
yaio.my-domain=yaio-playground.local
yaio.security.xframe-allowed-domains=yaio-playground.local,yaio-prod.local,www.your-all-in-one.de,www.dartagnan.biz

# allow reset of app (only for demo environments)
yaio.demo.allow-reset=true

# masterid for static exports, if not set an empty static-block will be inserted (default: SysPlay1)
yaio.staticdatasource.mastersysuid=SysPlay1

# masterid for system
yaio.mastersysuid=MasterplanMasternode1

# known instances
yaio.knowninstances.name.1=Server: yaio-playground.local
yaio.knowninstances.url.1=http://yaio-playground.local
yaio.knowninstances.desc.1=Meine Test-Instanz unter http://yaio-playground.local 
yaio.knowninstances.name.2=Server: yaio-prod.local
yaio.knowninstances.url.2=http://yaio-prod.local
yaio.knowninstances.desc.2=Meine produktive Instanz unter http://yaio-prod.local 

# configure the serviceurls called by dms-client
yaio.dms-client.jobs.urlwebshots.fixedDelay=10000
yaio.dms-client.jobs.urlwebshots.fixedRate=10000
yaio.dms-client.jobs.urlwebshots.initialDelay=1000
yaio.dms-client.jobs.urlwebshots.cron=

yaio.dms-client.jobs.indexer.fixedDelay=10000
yaio.dms-client.jobs.indexer.fixedRate=10000
yaio.dms-client.jobs.indexer.initialDelay=1000
yaio.dms-client.jobs.indexer.cron=

yaio.dms-client.yaio-webshot-service.baseurl=http://localhost:8083/services/webshot
yaio.dms-client.yaio-webshot-service.username=yaiowebshot
yaio.dms-client.yaio-webshot-service.password=secret
yaio.dms-client.yaio-webshot-service.available=true

yaio.dms-client.yaio-dms-service.appId=yaio-playground
yaio.dms-client.yaio-dms-service.baseurl=http://localhost:8083/services/dms
yaio.dms-client.yaio-dms-service.username=yaiodms
yaio.dms-client.yaio-dms-service.password=secret
yaio.dms-client.yaio-dms-service.buffersize=1024
yaio.dms-client.yaio-dms-service.available=true

yaio.dms-client.yaio-metaextract-service.baseurl=http://localhost:8083/services/metaextract
yaio.dms-client.yaio-metaextract-service.username=yaiometaextract
yaio.dms-client.yaio-metaextract-service.password=secret
yaio.dms-client.yaio-metaextract-service.available=true

##########################
## Database
##########################

# define persistence+datasource
# mysql
#config.spring.persistenceUnitName=persistenceUnitMysql
#config.spring.dataSource=dataSourceMySql
# hsqldb
config.spring.persistenceUnitName=persistenceUnitHSqlDB
config.spring.dataSource=dataSourceHSqlDB

# HSQL
databaseHsqldb.driverClassName=org.hsqldb.jdbcDriver
databaseHsqldb.url=jdbc\:hsqldb\:file\:var/hsqldb/yaio;shutdown\=true;hsqldb.write_delay\=false;
databaseHsqldb.username=sa
databaseHsqldb.password=
# MySql
databaseMysql.driverClassName=com.mysql.jdbc.Driver
databaseMysql.url=jdbc\:mysql\://localhost\:3306/test
databaseMysql.username=root
databaseMysql.password=

#################
# flyway-database-migrations
#################
#flyway.baseline-description= #
#flyway.baseline-version=1 # version to start migration
#flyway.baseline-on-migrate= #
#flyway.check-location=false # Check that migration scripts location exists.
#flyway.clean-on-validation-error= #
#flyway.enabled=true # Enable flyway.
#flyway.encoding= #
#flyway.ignore-failed-future-migration= #
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
#flyway.locations=classpath:db/migration # locations of migrations scripts
#flyway.out-of-order= #
#flyway.password= # JDBC password if you want Flyway to create its own DataSource
#flyway.placeholder-prefix= #
#flyway.placeholder-replacement= #
#flyway.placeholder-suffix= #
#flyway.placeholders.*= #
#flyway.schemas= # schemas to update
#flyway.sql-migration-prefix=V #
#flyway.sql-migration-separator= #
#flyway.sql-migration-suffix=.sql #
#flyway.table= #
#flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#flyway.user= # Login user of the database to migrate.
#flyway.validate-on-migrate= #


##########################
## local plantuml-service
##########################
yaio-plantuml-service.baseurl=/converters/plantuml
yaio-plantuml-service.security.useown=false
yaio-plantuml-service.security.apiusers.filelocation=./config/security-apiusers.properties
yaio-plantuml-service.security.role=PLANTUML

##########################
## local dms-service
##########################
yaio-dms-service.security.apiusers.filelocation=./config/security-apiusers.properties
yaio-dms-service.security.role=DMS
yaio-dms-service.security.useown=false
yaio-dms-service.baseurl=/services/dms
yaio-dms-service.storagebasedir=./storage/

##########################
## local webshot-service
##########################
yaio-webshot-service.security.apiusers.filelocation=./config/security-apiusers.properties
yaio-webshot-service.security.role=WEBSHOT
yaio-webshot-service.security.useown=false
yaio-webshot-service.baseurl=/services/webshot
yaio-webshot-service.timeout=30
yaio-webshot-service.buffersize=1024
yaio-webshot-service.html2pdf.bin=C:\\Program Files (x86)\\wkhtmltopdf\\bin\\wkhtmltopdf.exe
yaio-webshot-service.html2pdf.defaultoptions=--page-width 800 --page-height 600 --javascript-delay 5000 --load-error-handling ignore
yaio-webshot-service.html2png.bin=C:\\Program Files (x86)\\wkhtmltopdf\\bin\\wkhtmltoimage.exe
yaio-webshot-service.html2png.defaultoptions=--width 800 --crop-w 1200 --javascript-delay 5000 --load-error-handling ignore

#####
# webshot-downloadfirewall 
#####
yaio-webshot-service.downloadfirewall.ipWhiteList=
yaio-webshot-service.downloadfirewall.hostWhiteList=yaio-playground.local

# set this to true, to secure all private nets, loopbacks, localhost.... but then you cant override and the whitelist are ignored
yaio-webshot-service.downloadfirewall.flgUseDefault=false
# set this to true, to secure all private nets, loopbacks
yaio-webshot-service.downloadfirewall.flgUseDefaultIPBlackList=true
# set this to true, to secure all localhost-names  
yaio-webshot-service.downloadfirewall.flgUseDefaultHostBlackList=true
# set this to true, to allow common web-protocols http, https, ftp 
yaio-webshot-service.downloadfirewall.flgUseDefaultProtocolWhiteList=true

# set these if yo do all manually
yaio-webshot-service.downloadfirewall.ipBlackList=
yaio-webshot-service.downloadfirewall.hostBlackList=
yaio-webshot-service.downloadfirewall.protocolWhiteList=

##########################
## metaextract
##########################
yaio-metaextract-service.security.apiusers.filelocation=./config/security-apiusers.properties
yaio-metaextract-service.security.role=METAEXTRACT
yaio-metaextract-service.security.useown=true
yaio-metaextract-service.baseurl=/services/metaextract
yaio-metaextract-service.tess.datapath=./var/tessdata/

###
# metaextract-downloadfirewall 
###
yaio-metaextract-service.downloadfirewall.ipWhiteList=
yaio-metaextract-service.downloadfirewall.hostWhiteList=yaio-playground.local

# set this to true, to secure all private nets, loopbacks, localhost.... but then you cant override 
yaio-metaextract-service.downloadfirewall.flgUseDefault=false
# set this to true, to secure all private nets, loopbacks
yaio-metaextract-service.downloadfirewall.flgUseDefaultIPBlackList=true
# set this to true, to secure all localhost-names  
yaio-metaextract-service.downloadfirewall.flgUseDefaultHostBlackList=true
# set this to true, to allow common web-protocols http, https, ftp 
yaio-metaextract-service.downloadfirewall.flgUseDefaultProtocolWhiteList=true

# use these if you do all manually, but then you must set all flgUseDefault* to false
yaio-metaextract-service.downloadfirewall.ipBlackList=
yaio-metaextract-service.downloadfirewall.hostBlackList=
yaio-metaextract-service.downloadfirewall.protocolWhiteList=
